import { Injectable } from '@angular/core';


type stix_objects_type = {[key: string] : {[key: string] : any}};
// stix doc containing title, description, img, etc...
let stix_objects : stix_objects_type = {"artifact": {"title": "artifact", "description": "The Artifact Object permits capturing an array of bytes (8-bits), as a base64-encoded string string, or linking to a file-like payload.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `artifact`.", "enum": ["artifact"]}, "id": {"title": "id", "pattern": "^artifact--"}, "mime_type": {"type": "string", "pattern": "^(application|audio|font|image|message|model|multipart|text|video)/[a-zA-Z0-9.+_-]+", "description": "The value of this property MUST be a valid MIME type as specified in the IANA Media Types registry."}, "payload_bin": {"$ref": "../common/binary.json", "description": "Specifies the binary data contained in the artifact as a base64-encoded string."}, "url": {"$ref": "../common/url-regex.json", "description": "The value of this property MUST be a valid URL that resolves to the unencoded content."}, "hashes": {"$ref": "../common/hashes-type.json", "description": "Specifies a dictionary of hashes for the contents of the url or the payload_bin.  This MUST be provided when the url property is present."}, "encryption_algorithm": {"$ref": "#/definitions/encryption-algorithm-enum", "description": "If the artifact is encrypted, specifies the type of encryption algorithm the binary data  (either via payload_bin or url) is encoded in."}, "decryption_key": {"type": "string", "description": "Specifies the decryption key for the encrypted binary data (either via payload_bin or url)."}}, "icon": "stix2-sco2-icons/Artifact-Round.png"}, "autonomous-system": {"title": "autonomous-system", "description": "The AS object represents the properties of an Autonomous Systems (AS).", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `autonomous-system`.", "enum": ["autonomous-system"]}, "id": {"title": "id", "pattern": "^autonomous-system--"}, "number": {"type": "integer", "description": "Specifies the number assigned to the AS. Such assignments are typically performed by a Regional Internet Registries (RIR)."}, "name": {"type": "string", "description": "Specifies the name of the AS."}, "rir": {"type": "string", "description": "Specifies the name of the Regional Internet Registry (RIR) that assigned the number to the AS."}}, "icon": "stix2-sco-network-traffic-icons-png/autonomous-system-round-flat-300-dpi.png"}, "directory": {"title": "directory", "description": "The Directory Object represents the properties common to a file system directory.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `directory`.", "enum": ["directory"]}, "id": {"title": "id", "pattern": "^directory--"}, "path": {"type": "string", "description": "Specifies the path, as originally observed, to the directory on the file system."}, "path_enc": {"type": "string", "pattern": "^[a-zA-Z0-9/\\.+_:-]{2,250}$", "description": "Specifies the observed encoding for the path."}, "ctime": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the directory was created."}, "mtime": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the directory was last written to/modified."}, "atime": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the directory was last accessed."}, "contains_refs": {"type": "array", "description": "Specifies a list of references to other File and/or Directory Objects contained within the directory.", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-sco2-icons/Directory-Round.png"}, "domain-name": {"title": "domain-name", "description": "The Domain Name represents the properties of a network domain name.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `domain-name`.", "enum": ["domain-name"]}, "id": {"title": "id", "pattern": "^domain-name--"}, "value": {"type": "string", "description": "Specifies the value of the domain name.", "format": "idn-hostname"}, "resolves_to_refs": {"type": "array", "description": "Specifies a list of references to one or more IP addresses or domain names that the domain name resolves to.", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-sco-network-address-icons-png/domain-name-round-flat-300-dpi.png"}, "email-addr": {"title": "email-addr", "description": "The Email Address Object represents a single email address.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `email-addr`.", "enum": ["email-addr"]}, "id": {"title": "id", "pattern": "^email-addr--"}, "value": {"type": "string", "format": "email", "description": "Specifies a single email address. This MUST not include the display name."}, "display_name": {"type": "string", "description": "Specifies a single email display name, i.e., the name that is displayed to the human user of a mail application."}, "belongs_to_ref": {"description": "Specifies the user account that the email address belongs to, as a reference to a User Account Object.", "type": "string"}}, "icon": "stix2-sco1-icons-png/email-addr-round-flat-300-dpi.png"}, "email-message": {"title": "email-message", "description": "The Email Message Object represents an instance of an email message.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `email-message`.", "enum": ["email-message"]}, "id": {"title": "id", "pattern": "^email-message--"}, "date": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time that the email message was sent."}, "content_type": {"type": "string", "description": "Specifies the value of the 'Content-Type' header of the email message."}, "from_ref": {"description": "Specifies the value of the 'From:' header of the email message.", "type": "string"}, "sender_ref": {"description": "Specifies the value of the 'From' field of the email message.", "type": "string"}, "to_refs": {"type": "array", "description": "Specifies the mailboxes that are 'To:' recipients of the email message.", "items": {"type": "string"}, "minItems": 1}, "cc_refs": {"type": "array", "description": "Specifies the mailboxes that are 'CC:' recipients of the email message.", "items": {"type": "string"}, "minItems": 1}, "bcc_refs": {"type": "array", "description": "Specifies the mailboxes that are 'BCC:' recipients of the email message.", "items": {"type": "string"}, "minItems": 1}, "message_id": {"type": "string", "description": "Specifies the Message-ID field of the email message."}, "subject": {"type": "string", "description": "Specifies the subject of the email message."}, "received_lines": {"type": "array", "description": "Specifies one or more Received header fields that may be included in the email headers.", "items": {"type": "string"}}, "additional_header_fields": {"$ref": "#/definitions/email-additional-header-fields", "description": "Specifies any other header fields found in the email message, as a dictionary."}, "raw_email_ref": {"description": "Specifies the raw binary contents of the email message, including both the headers and body, as a reference to an Artifact Object.", "type": "string"}}, "icon": null}, "file": {"title": "file", "description": "The File Object represents the properties of a file.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `file`.", "enum": ["file"]}, "id": {"title": "id", "pattern": "^file--"}, "extensions": {"$ref": "#/definitions/file-extensions-dictionary", "description": "The File Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: ntfs-ext, raster-image-ext, pdf-ext, archive-ext, windows-pebinary-ext"}, "hashes": {"$ref": "../common/hashes-type.json", "description": "Specifies a dictionary of hashes for the file."}, "size": {"type": "integer", "minimum": 0, "description": "Specifies the size of the file, in bytes, as a non-negative integer."}, "name": {"type": "string", "description": "Specifies the name of the file."}, "name_enc": {"type": "string", "pattern": "^[a-zA-Z0-9/\\.+_:-]{2,250}$", "description": "Specifies the observed encoding for the name of the file."}, "magic_number_hex": {"$ref": "../common/hex.json", "description": "Specifies the hexadecimal constant ('magic number') associated with a specific file format that corresponds to the file, if applicable."}, "mime_type": {"type": "string", "description": "Specifies the MIME type name specified for the file, e.g., 'application/msword'."}, "ctime": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the file was created."}, "mtime": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the file was last written to/modified."}, "atime": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the file was last accessed."}, "parent_directory_ref": {"description": "Specifies the parent directory of the file, as a reference to a Directory Object.", "type": "string"}, "contains_refs": {"type": "array", "description": "Specifies a list of references to other Observable Objects contained within the file.", "items": {"type": "string"}, "minItems": 1}, "content_ref": {"description": "Specifies the content of the file, represented as an Artifact Object.", "type": "string"}}, "icon": "stix2-sco2-icons/File-Round.png"}, "ipv4-addr": {"title": "ipv4-addr", "description": "The IPv4 Address Object represents one or more IPv4 addresses expressed using CIDR notation.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `ipv4-addr`.", "enum": ["ipv4-addr"]}, "id": {"title": "id", "pattern": "^ipv4-addr--"}, "value": {"type": "string", "description": "Specifies one or more IPv4 addresses expressed using CIDR notation.", "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))?$"}, "resolves_to_refs": {"type": "array", "description": "Specifies a list of references to one or more Layer 2 Media Access Control (MAC) addresses that the IPv4 address resolves to.", "items": {"type": "string"}, "minItems": 1}, "belongs_to_refs": {"type": "array", "description": "Specifies a reference to one or more autonomous systems (AS) that the IPv4 address belongs to.", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-sco-network-address-icons-png/ipv4-addr-round-flat-300-dpi.png"}, "ipv6-addr": {"title": "ipv6-addr", "description": "The IPv6 Address Object represents one or more IPv6 addresses expressed using CIDR notation.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `ipv6-addr`.", "enum": ["ipv6-addr"]}, "id": {"title": "id", "pattern": "^ipv6-addr--"}, "value": {"type": "string", "description": "Specifies one or more IPv6 addresses expressed using CIDR notation.", "pattern": "^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/(12[0-8]|1[0-1][0-9]|[1-9][0-9]|[0-9]))?$"}, "resolves_to_refs": {"type": "array", "description": "Specifies a list of references to one or more Layer 2 Media Access Control (MAC) addresses that the IPv6 address resolves to.", "items": {"type": "string"}, "minItems": 1}, "belongs_to_refs": {"type": "array", "description": "Specifies a reference to one or more autonomous systems (AS) that the IPv6 address belongs to.", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-sco-network-address-icons-png/ipv6-addr-round-flat-300-dpi.png"}, "mac-addr": {"title": "mac-addr", "description": "The MAC Address Object represents a single Media Access Control (MAC) address.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `mac-addr`.", "enum": ["mac-addr"]}, "id": {"title": "id", "pattern": "^mac-addr--"}, "value": {"type": "string", "pattern": "^([0-9a-f]{2}[:]){5}([0-9a-f]{2})$", "description": "Specifies one or more mac addresses expressed using CIDR notation."}}, "icon": "stix2-sco-network-address-icons-png/mac-addr-round-flat-300-dpi.png"}, "mutex": {"title": "mutex", "description": "The Mutex Object represents the properties of a mutual exclusion (mutex) object.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `mutex`.", "enum": ["mutex"]}, "id": {"title": "id", "pattern": "^mutex--"}, "name": {"type": "string", "description": "Specifies the name of the mutex object."}}, "icon": "stix2-sco2-icons/Mutex-Round.png"}, "network-traffic": {"title": "network-traffic", "description": "The Network Traffic Object represents arbitrary network traffic that originates from a source and is addressed to a destination.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `network-traffic`.", "enum": ["network-traffic"]}, "id": {"title": "id", "pattern": "^network-traffic--"}, "extensions": {"$ref": "#/definitions/network-traffic-extensions-dictionary", "description": "The Network Traffic Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: http-ext, tcp-ext, icmp-ext, socket-ext"}, "start": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the network traffic was initiated, if known."}, "end": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time the network traffic ended, if known."}, "src_ref": {"description": "Specifies the source of the network traffic, as a reference to an Observable Object.", "type": "string"}, "dst_ref": {"description": "Specifies the destination of the network traffic, as a reference to an Observable Object.", "type": "string"}, "src_port": {"type": "integer", "description": "Specifies the source port used in the network traffic, as an integer. The port value MUST be in the range of 0 - 65535.", "minimum": 0, "maximum": 65535}, "dst_port": {"type": "integer", "description": "Specifies the destination port used in the network traffic, as an integer. The port value MUST be in the range of 0 - 65535.", "minimum": 0, "maximum": 65535}, "protocols": {"type": "array", "description": "Specifies the protocols observed in the network traffic, along with their corresponding state.", "items": {"type": "string"}, "minItems": 1}, "src_byte_count": {"type": "integer", "description": "Specifies the number of bytes sent from the source to the destination."}, "dst_byte_count": {"type": "integer", "description": "Specifies the number of bytes sent from the destination to the source."}, "src_packets": {"type": "integer", "description": "Specifies the number of packets sent from the source to the destination."}, "dst_packets": {"type": "integer", "description": "Specifies the number of packets sent destination to the source."}, "ipfix": {"description": "Specifies any IP Flow Information Export (IPFIX) data for the traffic.", "allOf": [{"$ref": "../common/dictionary.json"}], "patternProperties": {"^[a-zA-Z0-9_-]{0,250}$": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}}, "src_payload_ref": {"description": "Specifies the bytes sent from the source to the destination.", "type": "string"}, "dst_payload_ref": {"description": "Specifies the bytes sent from the source to the destination.", "type": "string"}, "encapsulates_refs": {"type": "array", "description": "Links to other network-traffic objects encapsulated by a network-traffic.", "items": {"type": "string"}, "minItems": 1}, "encapsulated_by_ref": {"description": "Links to another network-traffic object which encapsulates this object.", "type": "string"}}, "icon": "stix2-sco-network-traffic-icons-png/autonomous-system-round-flat-300-dpi.png"}, "process": {"title": "process", "description": "The Process Object represents common properties of an instance of a computer program as executed on an operating system.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `process`.", "enum": ["process"]}, "id": {"title": "id", "pattern": "^process--"}, "extensions": {"$ref": "#/definitions/process-extensions-dictionary", "description": "The Process Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: windows-process-ext, windows-service-ext."}, "is_hidden": {"type": "boolean", "description": "Specifies whether the process is hidden."}, "pid": {"type": "integer", "description": "Specifies the Process ID, or PID, of the process."}, "created_time": {"$ref": "../common/timestamp.json", "description": "Specifies the date/time at which the process was created."}, "cwd": {"type": "string", "description": "Specifies the current working directory of the process."}, "command_line": {"type": "string", "description": "Specifies the full command line used in executing the process, including the process name (which may be specified individually via the binary_ref.name property) and any arguments."}, "environment_variables": {"$ref": "../common/dictionary.json", "description": "Specifies the list of environment variables associated with the process as a dictionary."}, "opened_connection_refs": {"type": "array", "description": "Specifies the list of network connections opened by the process, as a reference to one or more Network Traffic Objects.", "items": {"type": "string"}, "minItems": 1}, "creator_user_ref": {"description": "Specifies the user that created the process, as a reference to a User Account Object.", "type": "string"}, "image_ref": {"description": "Specifies the executable binary that was executed as the process image, as a reference to a File Object.", "type": "string"}, "parent_ref": {"description": "Specifies the other process that spawned (i.e. is the parent of) this one, as represented by a Process Object.", "type": "string"}, "child_refs": {"type": "array", "description": "Specifies the other processes that were spawned by (i.e. children of) this process, as a reference to one or more other Process Objects.", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-sco2-icons/Process-Round.png"}, "software": {"title": "software", "description": "The Software Object represents high-level properties associated with software, including software products.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `software`.", "enum": ["software"]}, "id": {"title": "id", "pattern": "^software--"}, "name": {"type": "string", "description": "Specifies the name of the software."}, "cpe": {"type": "string", "pattern": "cpe:2\\.3:[aho\\*\\-](:(((\\?*|\\*?)([a-zA-Z0-9\\-\\._]|(\\\\[\\\\\\*\\?!\"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]))+(\\?*|\\*?))|[\\*\\-])){5}(:(([a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))?)|[\\*\\-]))(:(((\\?*|\\*?)([a-zA-Z0-9\\-\\._]|(\\\\[\\\\\\*\\?!\"#$$%&'\\(\\)\\+,/:;<=>@\\[\\]\\^`\\{\\|}~]))+(\\?*|\\*?))|[\\*\\-])){4}", "description": "Specifies the Common Platform Enumeration (CPE) entry for the software, if available. The value for this property MUST be a CPE v2.3 entry from the official NVD CPE Dictionary."}, "swid": {"type": "string", "description": "Specifies the Software Identification (SWID) Tags entry for the software, if available."}, "languages": {"type": "array", "description": "Specifies the languages supported by the software. The value of each list member MUST be an ISO 639-2 language code.", "items": {"type": "string", "pattern": "^[a-z]{3}$"}, "minItems": 1}, "vendor": {"type": "string", "description": "Specifies the name of the vendor of the software."}, "version": {"type": "string", "description": "Specifies the version of the software."}}, "icon": "stix2-sco2-icons/Software-Round.png"}, "url": {"title": "url", "description": "The URL Object represents the properties of a uniform resource locator (URL).", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `url`.", "enum": ["url"]}, "id": {"title": "id", "pattern": "^url--"}, "value": {"$ref": "../common/url-regex.json", "description": "Specifies the value of the URL."}}, "icon": null}, "user-account": {"title": "user-account", "description": "The User Account Object represents an instance of any type of user account, including but not limited to operating system, device, messaging service, and social media platform accounts.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `user-account`.", "enum": ["user-account"]}, "id": {"title": "id", "pattern": "^user-account--"}, "extensions": {"$ref": "#/definitions/user-account-extensions-dictionary", "description": "The User Account Object defines the following extensions. In addition to these, producers MAY create their own. Extensions: unix-account-ext."}, "user_id": {"type": "string", "description": "Specifies the identifier of the account."}, "credential": {"type": "string", "description": "Specifies a cleartext credential. This is only intended to be used in capturing metadata from malware analysis (e.g., a hard-coded domain administrator password that the malware attempts to use for lateral movement) and SHOULD NOT be used for sharing of PII."}, "account_login": {"type": "string", "description": "Specifies the account login string, used in cases where the user_id property specifies something other than what a user would type when they login."}, "account_type": {"type": "string", "description": "Specifies the type of the account. This is an open vocabulary and values SHOULD come from the account-type-ov vocabulary."}, "display_name": {"type": "string", "description": "Specifies the display name of the account, to be shown in user interfaces, if applicable."}, "is_service_account": {"type": "boolean", "description": "Indicates that the account is associated with a network service or system process (daemon), not a specific individual."}, "is_privileged": {"type": "boolean", "description": "Specifies that the account has elevated privileges (i.e., in the case of root on Unix or the Windows Administrator account)."}, "can_escalate_privs": {"type": "boolean", "description": "Specifies that the account has the ability to escalate privileges (i.e., in the case of sudo on Unix or a Windows Domain Admin account)."}, "is_disabled": {"type": "boolean", "description": "Specifies if the account is disabled."}, "account_created": {"$ref": "../common/timestamp.json", "description": "Specifies when the account was created."}, "account_expires": {"$ref": "../common/timestamp.json", "description": "Specifies the expiration date of the account."}, "credential_last_changed": {"$ref": "../common/timestamp.json", "description": "Specifies when the account credential was last changed."}, "account_first_login": {"$ref": "../common/timestamp.json", "description": "Specifies when the account was first accessed."}, "account_last_login": {"$ref": "../common/timestamp.json", "description": "Specifies when the account was last accessed."}}, "icon": "stix2-sco1-icons-png/user-account-round-flat-300-dpi.png"}, "windows-registry-key": {"title": "windows-registry-key", "description": "The Registry Key Object represents the properties of a Windows registry key.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `windows-registry-key`.", "enum": ["windows-registry-key"]}, "id": {"title": "id", "pattern": "^windows-registry-key--"}, "key": {"type": "string", "not": {"pattern": "^HKLM|HKCC|HKCR|HKCU|HKU|hklm|hkcc|hkcr|hkcu|hku"}, "description": "Specifies the full registry key including the hive."}, "values": {"type": "array", "items": {"$ref": "#/definitions/windows-registry-value-type"}, "description": "Specifies the values found under the registry key."}, "modified_time": {"$ref": "../common/timestamp.json", "description": "Specifies the last date/time that the registry key was modified."}, "creator_user_ref": {"description": "Specifies a reference to a user account, represented as a User Account Object, that created the registry key.", "type": "string"}, "number_of_subkeys": {"type": "integer", "description": "Specifies the number of subkeys contained under the registry key."}}, "icon": null}, "x509-certificate": {"title": "x509-certificate", "description": "The X509 Certificate Object represents the properties of an X.509 certificate.", "properties": {"type": {"type": "string", "description": "The value of this property MUST be `x509-certificate`.", "enum": ["x509-certificate"]}, "id": {"title": "id", "pattern": "^x509-certificate--"}, "is_self_signed": {"type": "boolean", "description": "Specifies whether the certificate is self-signed, i.e., whether it is signed by the same entity whose identity it certifies."}, "hashes": {"$ref": "../common/hashes-type.json", "description": "Specifies any hashes that were calculated for the entire contents of the certificate."}, "version": {"type": "string", "description": "Specifies the version of the encoded certificate."}, "serial_number": {"type": "string", "description": "Specifies the unique identifier for the certificate, as issued by a specific Certificate Authority."}, "signature_algorithm": {"type": "string", "description": "Specifies the name of the algorithm used to sign the certificate."}, "issuer": {"type": "string", "description": "Specifies the name of the Certificate Authority that issued the certificate."}, "validity_not_before": {"$ref": "../common/timestamp.json", "description": "Specifies the date on which the certificate validity period begins."}, "validity_not_after": {"$ref": "../common/timestamp.json", "description": "Specifies the date on which the certificate validity period ends."}, "subject": {"type": "string", "description": "Specifies the name of the entity associated with the public key stored in the subject public key field of the certificate."}, "subject_public_key_algorithm": {"type": "string", "description": "Specifies the name of the algorithm with which to encrypt data being sent to the subject."}, "subject_public_key_modulus": {"type": "string", "description": "Specifies the modulus portion of the subject\u2019s public RSA key."}, "subject_public_key_exponent": {"type": "integer", "description": "Specifies the exponent portion of the subject\u2019s public RSA key, as an integer."}, "x509_v3_extensions": {"$ref": "#/definitions/x509-v3-extensions-type", "description": "Specifies any standard X.509 v3 extensions that may be used in the certificate."}}, "icon": null}, "attack-pattern": {"title": "attack-pattern", "description": "Attack Patterns are a type of TTP that describe ways that adversaries attempt to compromise targets. ", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `attack-pattern`.", "enum": ["attack-pattern"]}, "aliases": {"type": "array", "items": {"type": "string"}, "description": "Alternative names used to identify this Attack Pattern."}, "id": {"title": "id", "pattern": "^attack-pattern--"}, "name": {"type": "string", "description": "The name used to identify the Attack Pattern."}, "description": {"type": "string", "description": "A description that provides more details and context about the Attack Pattern, potentially including its purpose and its key characteristics."}, "kill_chain_phases": {"type": "array", "description": "The list of kill chain phases for which this attack pattern is used.", "items": {"$ref": "../common/kill-chain-phase.json"}, "minItems": 1}}, "icon": "stix2-ttp-icons-png/attack-pattern-round-flat-300-dpi.png"}, "campaign": {"title": "campaign", "description": "A Campaign is a grouping of adversary behavior that describes a set of malicious activities or attacks that occur over a period of time against a specific set of targets.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `campaign`.", "enum": ["campaign"]}, "id": {"title": "id", "pattern": "^campaign--"}, "name": {"type": "string", "description": "The name used to identify the Campaign."}, "description": {"type": "string", "description": "A description that provides more details and context about the Campaign, potentially including its purpose and its key characteristics."}, "aliases": {"type": "array", "description": "Alternative names used to identify this campaign.", "items": {"type": "string"}, "minItems": 1}, "first_seen": {"$ref": "../common/timestamp.json", "description": "The time that this Campaign was first seen."}, "last_seen": {"$ref": "../common/timestamp.json", "description": "The time that this Campaign was last seen."}, "objective": {"type": "string", "description": "This field defines the Campaign\u2019s primary goal, objective, desired outcome, or intended effect."}}, "icon": "stix2-adversary-icons-png/campaign-round-flat-300-dpi.png"}, "course-of-action": {"title": "course-of-action", "description": "A Course of Action is an action taken either to prevent an attack or to respond to an attack that is in progress. ", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `course-of-action`.", "enum": ["course-of-action"]}, "id": {"title": "id", "pattern": "^course-of-action--"}, "name": {"type": "string", "description": "The name used to identify the Course of Action."}, "description": {"type": "string", "description": "A description that provides more details and context about this object, potentially including its purpose and its key characteristics."}}, "icon": null}, "grouping": {"title": "grouping", "description": "A Grouping object explicitly asserts that the referenced STIX Objects have a shared content.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `grouping`.", "enum": ["grouping"]}, "id": {"title": "id", "pattern": "^grouping--"}, "name": {"type": "string", "description": "A name used to identify the Grouping."}, "description": {"type": "string", "description": "A description which provides more details and context about the Grouping, potentially including the purpose and key characteristics."}, "context": {"type": "string", "description": "A short description of the particular context shared by the content referenced by the Grouping."}, "object_refs": {"type": "array", "description": "The STIX Objects (SDOs and SROs) that  are referred to by this Grouping.", "items": {"$ref": "../common/identifier.json"}, "minItems": 1}}, "icon": "stix2-meta-icons-png/grouping-round-flat-300-dpi.png"}, "identity": {"title": "identity", "description": "Identities can represent actual individuals, organizations, or groups (e.g., ACME, Inc.) as well as classes of individuals, organizations, or groups.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `identity`.", "enum": ["identity"]}, "id": {"title": "id", "pattern": "^identity--"}, "roles": {"type": "array", "description": "The list of roles that this Identity performs (e.g., CEO, Domain Administrators, Doctors, Hospital, or Retailer). No open vocabulary is yet defined for this property.", "items": {"type": "string"}, "minItems": 1}, "name": {"type": "string", "description": "The name of this Identity."}, "description": {"type": "string", "description": "A description that provides more details and context about the Identity."}, "identity_class": {"type": "string", "description": "The type of entity that this Identity describes, e.g., an individual or organization. Open Vocab - identity-class-ov"}, "sectors": {"type": "array", "description": "The list of sectors that this Identity belongs to. Open Vocab - industry-sector-ov", "items": {"type": "string"}, "minItems": 1}, "contact_information": {"type": "string", "description": "The contact information (e-mail, phone number, etc.) for this Identity."}}, "icon": "stix2-adversary-icons-png/adversary-identity-round-flat-300-dpi.png"}, "incident": {"title": "incident", "description": "The Incident object in STIX 2.1 is a stub, to be expanded in future STIX 2 releases.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `incident`.", "enum": ["incident"]}, "id": {"title": "id", "pattern": "^incident--"}, "name": {"type": "string", "description": "The name used to identify the Incident."}, "description": {"type": "string", "description": "A description that provides more details and context about the Incident."}}, "icon": "stix2-ir-icons-png/incident-round-flat-300-dpi.png"}, "indicator": {"title": "indicator", "description": "Indicators contain a pattern that can be used to detect suspicious or malicious cyber activity.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `indicator`.", "enum": ["indicator"]}, "id": {"title": "id", "pattern": "^indicator--"}, "indicator_types": {"type": "array", "description": "This field is an Open Vocabulary that specifies the type of indicator. Open vocab - indicator-type-ov", "items": {"type": "string"}, "minItems": 1}, "name": {"type": "string", "description": "The name used to identify the Indicator."}, "description": {"type": "string", "description": "A description that provides the recipient with context about this Indicator potentially including its purpose and its key characteristics."}, "pattern": {"type": "string", "description": "The detection pattern for this indicator."}, "pattern_type": {"type": "string", "description": "The type of pattern used in this indicator."}, "pattern_version": {"type": "string", "description": "The version of the pattern that is used."}, "valid_from": {"$ref": "../common/timestamp.json", "description": "The time from which this indicator should be considered valuable intelligence."}, "valid_until": {"$ref": "../common/timestamp.json", "description": "The time at which this indicator should no longer be considered valuable intelligence."}, "kill_chain_phases": {"type": "array", "description": "The phases of the kill chain that this indicator detects.", "items": {"$ref": "../common/kill-chain-phase.json"}, "minItems": 1}}, "icon": "stix2-ir-icons-png/indicator-round-flat-300-dpi.png"}, "infrastructure": {"title": "infrastructure", "description": "Infrastructure objects describe systems, software services, and associated physical or virtual resources.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `infrastructure`.", "enum": ["infrastructure"]}, "id": {"title": "id", "pattern": "^infrastructure--"}, "name": {"type": "string", "description": "The name used to identify the Infrastructure."}, "description": {"type": "string", "description": "A description that provides more details and context about this Infrastructure potentially including its purpose and its key characteristics."}, "infrastructure_types": {"type": "array", "description": "This field is an Open Vocabulary that specifies the type of infrastructure. Open vocab - infrastructure-type-ov", "items": {"type": "string"}, "minItems": 1}, "aliases": {"type": "array", "description": "Alternative names used to identify this Infrastructure.", "items": {"type": "string"}, "minItems": 1}, "kill_chain_phases": {"type": "array", "description": "The list of kill chain phases for which this infrastructure is used.", "items": {"$ref": "../common/kill-chain-phase.json"}, "minItems": 1}, "first_seen": {"$ref": "../common/timestamp.json", "description": "The time that this infrastructure was first seen performing malicious activities."}, "last_seen": {"$ref": "../common/timestamp.json", "description": "The time that this infrastructure was last seen performing malicious activities."}}, "icon": "stix2-ttp-icons-png/infrastructure-round-flat-300-dpi.png"}, "intrusion-set": {"title": "intrusion-set", "description": "An Intrusion Set is a grouped set of adversary behavior and resources with common properties that is believed to be orchestrated by a single organization.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `intrusion-set`.", "enum": ["intrusion-set"]}, "id": {"title": "id", "pattern": "^intrusion-set--"}, "name": {"type": "string", "description": "The name used to identify the Intrusion Set."}, "description": {"type": "string", "description": "Provides more context and details about the Intrusion Set object."}, "aliases": {"type": "array", "description": "Alternative names used to identify this Intrusion Set.", "items": {"type": "string"}, "minItems": 1}, "first_seen": {"$ref": "../common/timestamp.json", "description": "The time that this Intrusion Set was first seen."}, "last_seen": {"$ref": "../common/timestamp.json", "description": "The time that this Intrusion Set was last seen."}, "goals": {"type": "array", "description": "The high level goals of this Intrusion Set, namely, what are they trying to do.", "items": {"type": "string"}, "minItems": 1}, "resource_level": {"type": "string", "description": "This defines the organizational level at which this Intrusion Set typically works. Open Vocab - attack-resource-level-ov"}, "primary_motivation": {"type": "string", "description": "The primary reason, motivation, or purpose behind this Intrusion Set. Open Vocab - attack-motivation-ov"}, "secondary_motivations": {"type": "array", "description": "The secondary reasons, motivations, or purposes behind this Intrusion Set. Open Vocab - attack-motivation-ov", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-adversary-icons-png/intrusion-set-round-flat-300-dpi.png"}, "location": {"title": "location", "description": "A Location represents a geographic location. The location may be described as any, some or all of the following: region (e.g., North America), civic address (e.g. New York, US), latitude and longitude.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `location`.", "enum": ["location"]}, "id": {"title": "id", "pattern": "^location--"}, "description": {"type": "string", "description": "A textual description of the Location."}, "name": {"type": "string", "description": "A name used to identify the Location."}, "latitude": {"type": "number", "description": "The latitude of the Location in decimal degrees.", "minimum": -90, "maximum": 90}, "longitude": {"type": "number", "description": "The longitude of the Location in decimal degrees.", "minimum": -180, "maximum": 180}, "precision": {"type": "number", "description": "Defines the precision of the coordinates specified by the latitude and longitude properties, measured in meters."}, "region": {"type": "string", "description": "The region that this Location describes."}, "country": {"type": "string", "description": "The country that this Location describes."}, "administrative_area": {"type": "string", "description": "The state, province, or other sub-national administrative area that this Location describes."}, "city": {"type": "string", "description": "The city that this Location describes."}, "street_address": {"type": "string", "description": "The street address that this Location describes."}, "postal_code": {"type": "string", "description": "The postal code for this Location."}}, "icon": "stix2-meta-icons-png/location-round-flat-300-dpi.png"}, "malware-analysis": {"title": "malware-analysis", "description": "Malware Analysis captures the metadata and results of a particular analysis performed (static or dynamic) on the malware instance or family.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `malware-analysis`.", "enum": ["malware-analysis"]}, "id": {"title": "id", "pattern": "^malware-analysis--"}, "product": {"type": "string", "description": "The name of the analysis engine or product that was used for this analysis."}, "version": {"type": "string", "description": "The version of the analysis product that was used to perform this analysis."}, "configuration_version": {"type": "string", "description": "The version of the analysis product configuration that was used to perform this analysis."}, "modules": {"type": "array", "items": {"type": "string"}, "description": "The particular analysis product modules that were used to perform the analysis.", "minItems": 1}, "analysis_engine_version": {"type": "string", "description": "The version of the analysis engine or product that was used to perform this analysis."}, "analysis_definition_version": {"type": "string", "description": "The version of the analysis definitions used by the analysis tool."}, "submitted": {"$ref": "../common/timestamp.json", "description": "The date and time that this malware was first submitted for scanning or analysis."}, "analysis_started": {"$ref": "../common/timestamp.json", "description": "The date and time that the malware analysis was initiated."}, "analysis_ended": {"$ref": "../common/timestamp.json", "description": "The date and time that the malware analysis ended."}, "result_name": {"type": "string", "description": "The classification result or name assigned to the malware instance by the scanner tool."}, "result": {"type": "string", "description": "The classification result as determined by the scanner or tool analysis process."}, "host_vm_ref": {"description": "A description of the virtual machine environment used to host the guest operating system (if applicable) that was used for the dynamic analysis of the malware instance or family.", "allOf": [{"$ref": "../common/identifier.json"}, {"pattern": "^software--"}]}, "operating_system_ref": {"description": "The operating system that was used to perform the dynamic analysis.", "allOf": [{"$ref": "../common/identifier.json"}, {"pattern": "^software--"}]}, "installed_software_refs": {"type": "array", "description": "Any non-standard software installed on the operating system used for the dynamic analysis of the malware instance or family.", "items": {"allOf": [{"$ref": "../common/identifier.json"}, {"pattern": "^software--"}]}, "minItems": 1}, "analysis_sco_refs": {"type": "array", "description": "The list of STIX objects that were captured during the analysis process.", "items": {"$ref": "../common/identifier.json"}, "minItems": 1}, "sample_ref": {"description": "Refers to the object this analysis was performed against.", "allOf": [{"$ref": "../common/identifier.json"}, {"oneOf": [{"pattern": "^artifact--"}, {"pattern": "^file--"}, {"pattern": "^network-traffic--"}]}]}}, "icon": "stix2-ttp-icons-png/malware-analysis-round-flat-300-dpi.png"}, "malware": {"title": "malware", "description": "Malware is a type of TTP that is also known as malicious code and malicious software, refers to a program that is inserted into a system, usually covertly, with the intent of compromising the confidentiality, integrity, or availability of the victim's data, applications, or operating system (OS) or of otherwise annoying or disrupting the victim.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `malware`.", "enum": ["malware"]}, "id": {"title": "id", "pattern": "^malware--"}, "aliases": {"type": "array", "description": "Alternative names used to identify this Malware or Malware family.", "items": {"type": "string"}, "minItems": 1}, "first_seen": {"$ref": "../common/timestamp.json", "description": "The time that the malware instance or family was first seen."}, "last_seen": {"$ref": "../common/timestamp.json", "description": "The time that the malware family or malware instance was last seen."}, "operating_system_refs": {"type": "array", "description": "The operating systems that the malware family or malware instance is executable on.", "items": {"allOf": [{"$ref": "../common/identifier.json"}, {"pattern": "^software--"}]}, "minItems": 1}, "architecture_execution_envs": {"type": "array", "description": "The processor architectures (e.g., x86, ARM, etc.) that the malware instance or family is executable on. Open Vocab - processor-architecture-os.", "items": {"type": "string"}, "minItems": 1}, "implementation_languages": {"type": "array", "description": "The programming language(s) used to implement the malware instance or family. Open Vocab - implementation-language-ov.", "items": {"type": "string"}, "minItems": 1}, "capabilities": {"type": "array", "description": "Specifies any capabilities identified for the malware instance or family. Open Vocab - malware-capabilities-ov.", "items": {"type": "string"}, "minItems": 1}, "sample_refs": {"type": "array", "description": "The sample_refs property specifies a list of identifiers of the SCO file or artifact objects associated with this malware instance(s) or family.", "items": {"type": "string"}, "minItems": 1}, "malware_types": {"type": "array", "description": "The type of malware being described. Open Vocab - malware-type-ov", "items": {"type": "string"}, "minItems": 1}, "name": {"type": "string", "description": "The name used to identify the Malware."}, "description": {"type": "string", "description": "Provides more context and details about the Malware object."}, "kill_chain_phases": {"type": "array", "description": "The list of kill chain phases for which this Malware instance can be used.", "items": {"$ref": "../common/kill-chain-phase.json"}, "minItems": 1}}, "icon": "stix2-ttp-icons-png/malware-analysis-round-flat-300-dpi.png"}, "note": {"title": "note", "description": "A Note is a comment or note containing informative text to help explain the context of one or more STIX Objects (SDOs or SROs) or to provide additional analysis that is not contained in the original object.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `note`.", "enum": ["note"]}, "id": {"title": "id", "pattern": "^note--"}, "abstract": {"type": "string", "description": "A brief summary of the note."}, "content": {"type": "string", "description": "The content of the note."}, "authors": {"type": "array", "description": "The name of the author(s) of this note (e.g., the analyst(s) that created it).", "items": {"type": "string"}, "minItems": 1}, "object_refs": {"type": "array", "description": "The STIX Objects (SDOs and SROs) that the note is being applied to.", "items": {"$ref": "../common/identifier.json"}, "minItems": 1}}, "icon": "stix2-meta-icons-png/note-round-flat-300-dpi.png"}, "observed-data": {"title": "observed-data", "description": "Observed data conveys information that was observed on systems and networks, such as log data or network traffic, using the Cyber Observable specification.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `observed-data`.", "enum": ["observed-data"]}, "id": {"title": "id", "pattern": "^observed-data--"}, "first_observed": {"$ref": "../common/timestamp.json", "description": "The beginning of the time window that the data was observed during."}, "last_observed": {"$ref": "../common/timestamp.json", "description": "The end of the time window that the data was observed during."}, "number_observed": {"type": "integer", "description": "The number of times the data represented in the objects property was observed. This MUST be an integer between 1 and 999,999,999 inclusive.", "minimum": 1, "maximum": 999999999}, "objects": {"type": "object", "description": "A dictionary of Cyber Observable Objects that describes the single 'fact' that was observed.", "minProperties": 1, "patternProperties": {"^.*$": {"type": "object", "oneOf": [{"allOf": [{"$ref": "../common/cyber-observable-core.json"}, {"not": {"properties": {"type": {"type": "string", "pattern": "^artifact|directory|file|mutex|process|software|user-account|windows-registry-key|x509-certificate|autonomous-system|domain-name|email-addr|email-message|ipv4-addr|ipv6-addr|mac-addr|network-traffic|url$", "description": "Indicates that this object is a custom Observable Object."}}}}]}, {"$ref": "../observables/artifact.json"}, {"$ref": "../observables/autonomous-system.json"}, {"$ref": "../observables/directory.json"}, {"$ref": "../observables/domain-name.json"}, {"$ref": "../observables/email-addr.json"}, {"$ref": "../observables/email-message.json"}, {"$ref": "../observables/file.json"}, {"$ref": "../observables/ipv4-addr.json"}, {"$ref": "../observables/ipv6-addr.json"}, {"$ref": "../observables/mac-addr.json"}, {"$ref": "../observables/mutex.json"}, {"$ref": "../observables/network-traffic.json"}, {"$ref": "../observables/process.json"}, {"$ref": "../observables/software.json"}, {"$ref": "../observables/url.json"}, {"$ref": "../observables/user-account.json"}, {"$ref": "../observables/windows-registry-key.json"}, {"$ref": "../observables/x509-certificate.json"}]}}}, "object_refs": {"type": "array", "description": "A list of SCOs and SROs representing the observation.", "items": {"$ref": "../common/identifier.json"}, "minItems": 1}}, "icon": "stix2-ir-icons-png/observed-data-round-flat-300-dpi.png"}, "opinion": {"title": "opinion", "description": "An Opinion is an assessment of the correctness of the information in a STIX Object produced by a different entity and captures the level of agreement or disagreement using a fixed scale.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `opinion`.", "enum": ["opinion"]}, "id": {"title": "id", "pattern": "^opinion--"}, "explanation": {"type": "string", "description": "An explanation of why the producer has this Opinion."}, "authors": {"type": "array", "description": "The name of the author(s) of this opinion (e.g., the analyst(s) that created it).", "items": {"type": "string"}, "minItems": 1}, "object_refs": {"type": "array", "description": "The STIX Objects (SDOs and SROs) that the opinion is being applied to.", "items": {"$ref": "../common/identifier.json"}, "minItems": 1}, "opinion": {"type": "string", "description": "The opinion that the producer has about about all of the STIX Object(s) listed in the object_refs property.", "enum": ["strongly-disagree", "disagree", "neutral", "agree", "strongly-agree"]}}, "icon": "stix2-meta-icons-png/opinion-round-flat-300-dpi.png"}, "report": {"title": "report", "description": "Reports are collections of threat intelligence focused on one or more topics, such as a description of a threat actor, malware, or attack technique, including context and related details.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `report`.", "enum": ["report"]}, "id": {"title": "id", "pattern": "^report--"}, "report_types": {"type": "array", "description": "This field is an Open Vocabulary that specifies the primary subject of this report. The suggested values for this field are in report-type-ov.", "items": {"type": "string"}, "minItems": 1}, "name": {"type": "string", "description": "The name used to identify the Report."}, "description": {"type": "string", "description": "A description that provides more details and context about Report."}, "published": {"$ref": "../common/timestamp.json", "description": "The date that this report object was officially published by the creator of this report."}, "object_refs": {"type": "array", "description": "Specifies the STIX Objects that are referred to by this Report.", "items": {"$ref": "../common/identifier.json"}, "minItems": 1}}, "icon": "stix2-meta-icons-png/report-round-flat-300-dpi.png"}, "threat-actor": {"title": "threat-actor", "description": "Threat Actors are actual individuals, groups, or organizations believed to be operating with malicious intent.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `threat-actor`.", "enum": ["threat-actor"]}, "id": {"title": "id", "pattern": "^threat-actor--"}, "threat_actor_types": {"type": "array", "description": "This field specifies the type of threat actor. Open Vocab - threat-actor-type-ov", "items": {"type": "string"}, "minItems": 1}, "name": {"type": "string", "description": "A name used to identify this Threat Actor or Threat Actor group."}, "description": {"type": "string", "description": "A description that provides more details and context about the Threat Actor."}, "aliases": {"type": "array", "description": "A list of other names that this Threat Actor is believed to use.", "items": {"type": "string"}, "minItems": 1}, "roles": {"type": "array", "description": "This is a list of roles the Threat Actor plays. Open Vocab - threat-actor-role-ov", "items": {"type": "string"}, "minItems": 1}, "goals": {"type": "array", "description": "The high level goals of this Threat Actor, namely, what are they trying to do.", "items": {"type": "string"}, "minItems": 1}, "first_seen": {"$ref": "../common/timestamp.json", "description": "The time that this Threat Actor was first seen."}, "last_seen": {"$ref": "../common/timestamp.json", "description": "The time that this Threat Actor was last seen."}, "sophistication": {"type": "string", "description": "The skill, specific knowledge, special training, or expertise a Threat Actor must have to perform the attack. Open Vocab - threat-actor-sophistication-ov"}, "resource_level": {"type": "string", "description": "This defines the organizational level at which this Threat Actor typically works. Open Vocab - attack-resource-level-ov"}, "primary_motivation": {"type": "string", "description": "The primary reason, motivation, or purpose behind this Threat Actor. Open Vocab - attack-motivation-ov"}, "secondary_motivations": {"type": "array", "description": "The secondary reasons, motivations, or purposes behind this Threat Actor. Open Vocab - attack-motivation-ov", "items": {"type": "string"}, "minItems": 1}, "personal_motivations": {"type": "array", "description": "The personal reasons, motivations, or purposes of the Threat Actor regardless of organizational goals. Open Vocab - attack-motivation-ov", "items": {"type": "string"}, "minItems": 1}}, "icon": "stix2-adversary-icons-png/threat-actor-round-flat-300-dpi.png"}, "tool": {"title": "tool", "description": "Tools are legitimate software that can be used by threat actors to perform attacks.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `tool`.", "enum": ["tool"]}, "id": {"title": "id", "pattern": "^tool--"}, "aliases": {"type": "array", "description": "Alternative names used to identify this Tool.", "items": {"type": "string"}, "minItems": 1}, "tool_types": {"type": "array", "description": "The kind(s) of tool(s) being described. Open Vocab - tool-type-ov", "items": {"type": "string"}, "minItems": 1}, "name": {"type": "string", "description": "The name used to identify the Tool."}, "description": {"type": "string", "description": "Provides more context and details about the Tool object."}, "tool_version": {"type": "string", "description": "The version identifier associated with the tool."}, "kill_chain_phases": {"type": "array", "description": "The list of kill chain phases for which this Tool instance can be used.", "items": {"$ref": "../common/kill-chain-phase.json"}, "minItems": 1}}, "icon": "stix2-ttp-icons-png/tool-round-flat-300-dpi.png"}, "vulnerability": {"title": "vulnerability", "description": "A Vulnerability is a mistake in software that can be directly used by a hacker to gain access to a system or network.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `vulnerability`.", "enum": ["vulnerability"]}, "id": {"title": "id", "pattern": "^vulnerability--"}, "name": {"type": "string", "description": "The name used to identify the Vulnerability."}, "description": {"type": "string", "description": "A description that provides more details and context about the Vulnerability."}}, "icon": "stix2-targeting-icons-png/vulnerability-round-flat-300-dpi.png"}, "relationship": {"title": "relationship", "description": "The Relationship object is used to link together two SDOs in order to describe how they are related to each other.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `relationship`.", "enum": ["relationship"]}, "id": {"title": "id", "pattern": "^relationship--"}, "relationship_type": {"title": "relationship_type", "type": "string", "description": "The name used to identify the type of relationship.", "pattern": "^[a-z0-9\\-]+$"}, "description": {"type": "string", "description": "A description that helps provide context about the relationship."}, "source_ref": {"description": "The ID of the source (from) object.", "allOf": [{"$ref": "../common/identifier.json"}, {"not": {"pattern": "^(relationship|sighting|bundle|marking-definition|language-content)--.+$"}}]}, "target_ref": {"description": "The ID of the target (to) object.", "allOf": [{"$ref": "../common/identifier.json"}, {"not": {"pattern": "^(relationship|sighting|bundle|marking-definition|language-content)--.+$"}}]}, "start_time": {"$ref": "../common/timestamp.json", "description": "This optional timestamp represents the earliest time at which the Relationship between the objects exists. If this property is a future timestamp, at the time the updated property is defined, then this represents an estimate by the producer of the intelligence of the earliest time at which relationship will be asserted to be true."}, "stop_time": {"$ref": "../common/timestamp.json", "description": "The latest time at which the Relationship between the objects exists. If this property is a future timestamp, at the time the updated property is defined, then this represents an estimate by the producer of the intelligence of the latest time at which relationship will be asserted to be true."}}, "icon": "stix2-relationship-icons-png/relationship-round-flat-300-dpi.png"}, "sighting": {"title": "sighting", "description": "A Sighting denotes the belief that something in CTI (e.g., an indicator, malware, tool, threat actor, etc.) was seen.", "properties": {"type": {"type": "string", "description": "The type of this object, which MUST be the literal `sighting`.", "enum": ["sighting"]}, "id": {"title": "id", "pattern": "^sighting--"}, "description": {"type": "string", "description": "A description that provides more details and context about the Sighting."}, "first_seen": {"$ref": "../common/timestamp.json", "description": "The beginning of the time window during which the SDO referenced by the sighting_of_ref property was sighted."}, "last_seen": {"$ref": "../common/timestamp.json", "description": "The end of the time window during which the SDO referenced by the sighting_of_ref property was sighted."}, "count": {"type": "integer", "description": "This is an integer between 0 and 999,999,999 inclusive and represents the number of times the object was sighted.", "minimum": 0, "maximum": 999999999}, "sighting_of_ref": {"allOf": [{"$ref": "../common/identifier.json"}, {"not": {"pattern": "^sighting--"}}, {"not": {"pattern": "^relationship--"}}, {"not": {"pattern": "^bundle--"}}, {"not": {"pattern": "^marking-definition--"}}, {"not": {"pattern": "^language-content--"}}], "description": "An ID reference to the object that has been sighted."}, "observed_data_refs": {"type": "array", "description": "A list of ID references to the Observed Data objects that contain the raw cyber data for this Sighting.", "items": {"allOf": [{"$ref": "../common/identifier.json"}, {"pattern": "^observed-data--"}]}, "minItems": 1}, "where_sighted_refs": {"type": "array", "description": "A list of ID references to the Identity or Location objects describing the entities or types of entities that saw the sighting.", "items": {"allOf": [{"$ref": "../common/identifier.json"}, {"pattern": "^(identity|location)--"}]}, "minItems": 1}, "summary": {"type": "boolean", "description": "The summary property indicates whether the Sighting should be considered summary data. "}}, "icon": "stix2-relationship-icons-png/sighting-round-flat-300-dpi.png"}} ;

type StixType = Array<{ [key: string]: any }>;


@Injectable({
  providedIn: 'root'
})
export class DataService {
  stix: StixType = [{
    "type": "domain-name",
    "id": "domain-name--1d4b0a8e-5b5a-4481-9bfd-e4f0cbdde6c3",
    "value": "example.com",
    "resolves_to_refs": ["ipv4-addr--8f14e45fceea167a5a36dedd4bea2543"]
  },
  {
    "type": "ipv4-addr",
    "id": "ipv4-addr--8f14e45fceea167a5a36dedd4bea2543",
    "value": "8.8.8.8"
  }];
  stix_types = stix_objects
  constructor() { }
}